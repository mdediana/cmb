#!/bin/bash

set -ue
source $CMB_HOME/env.sh

srvs=16
clis=4

runs=1

# rw_ratios
# 0:1 - 50% reads / 50% writes (writes = 100% reads)
# 1:1 - 66% reads / 33% writes (writes = 50% reads)
# 3:1 - 80% reads / 20% writes (writes = 25% reads)
# 9:1 - 91% reads / 9% writes (writes = 10% reads)
# 1:0 - 100% reads (writes = 0% reads)

ms=(ev any lat)
ls=(0.5 0.9)
ps=(uni par)
rs=(0:1 1:0 9:1 1:1 3:1)
ds=(0 25 50 75 100 125 150)

args=($($CMB_HOME/fix-res | tail -1 | sed -n 's/Last run: \(.*\)/\1/p'))
args=${args:-''}
[[ -n "$args" ]] && skip=true || skip=false

m0=${args[0]:-${ms[0]}}
l0=${args[1]:-${ls[0]}}
p0=${args[2]:-${ps[0]}}
r0=${args[3]:-${rs[0]}}
d0=${args[4]:-${ds[0]}}

match_last() {
  [[ $m == $m0 ]] && [[ $l == $l0 ]] && [[ $p == $p0 ]] && \
  [[ $r == $r0 ]] && [[ $d == $d0 ]] && \
  echo true || echo false
}

est_time() {
  local et=-
  if [[ $exec -gt 0 ]]; then
    local t1=$(date +%s)
    ((et=rem * (t1 - t0) / exec))
    # doesn't work for diffs > a day 
    et=$(date --date "1970-01-01 $et sec" +%T)
  fi
  echo $et
}

$CMB_HOME/srvs $srvs $clis

((rem=${#ms[@]} * ${#ls[@]} * ${#ps[@]} * ${#rs[@]} * ${#ds[@]}))
echo "Number of tests: $rem"

started=false
exec=0
t0=$(date +%s)
for m in "${ms[@]}"; do
  [[ $m == ev ]] && c=ev || c=tl
  $CMB_HOME/riak $c

  for l in "${ls[@]}"; do
    for p in "${ps[@]}"; do
      if [[ $skip == false ]] || \
         ([[ $m == $m0 ]] && [[ $l == $l0 ]] && [[ $p == $p0 ]]); then
        $CMB_HOME/start
        $CMB_HOME/load $c $l $p
        started=true
      fi

      for r in "${rs[@]}"; do
        for d in "${ds[@]}"; do
          echo "- $m $l $p $r $d ($rem / $(est_time))"
          ((rem--))
          if [[ $skip == true ]]; then
            [[ $(match_last) == true ]] && skip=false
            echo Skipped
          else
            sleep 15
            $CMB_HOME/delay $d
            for i in $(seq 1 $runs); do
              $CMB_HOME/run $m $l $p $r
              sleep 15
            done
            ((exec++)) || true # when exec == 0, exit status == 1
          fi
        done
      done

      if [[ $started == true ]]; then
        $CMB_HOME/delay 0
        $CMB_HOME/stop
        started=false
      fi
    done
  done
done
